import {type Models} from "react-native-appwrite";

// This file is auto-generated by the Appwrite CLI.
// You can regenerate it by running `appwrite types -l ts D:\minglee\minglee_backend`.

export enum Gender {
  MALE = "MALE",
  FEMALE = "FEMALE",
  BINARY = "BINARY",
  OTHER = "OTHER",
}

export enum InterestedIn {
  MALE = "MALE",
  FEMALE = "FEMALE",
  BINARY = "BINARY",
  OTHER = "OTHER",
}

export enum Type {
  IMAGE = "Image",
  TEXT = "Text",
  BOTH = "Both",
}

export enum ShowMe {
  FEMALE = "female",
  MALE = "male",
  OTHER = "other",
}

export enum Status {
  PENDING = "pending",
  REVIEWED = "reviewed",
  ACTION_TAKEN = "action_taken",
  COMPLETED = "completed",
}

export enum NotificationType {
  MATCH = "match",
  LIKE = "like",
  MESSAGE = "message",
}

export enum TargetType {
  APP = "APP",
  PUSH = "PUSH",
  EMA_IL = "EMAIl",
}

export type Profiles = Models.Document & {
  user_id: string;
  email: string;
  first_name: string | null;
  last_name: string | null;
  gender: Gender | null;
  interested_in: InterestedIn | null;
  birth_date: string | null;
  bio: string | null;
  job_title: string | null;
  company: string | null;
  school: string | null;
  is_verified: boolean | null;
};

export type Messages = Models.Document & {
  sender_id: string;
  receiver_id: string;
  type: Type;
  content: string | null;
  imageUrl: string | null;
};

export type Subscriptions = Models.Document & {};

export type UserLocation = Models.Document & {
  user_id: string;
  latitude: string;
  longitude: string;
};

export type UserPhotos = Models.Document & {
  user_id: string;
  photo_url: string;
  is_primary: boolean;
  title: string | null;
  description: string | null;
};

export type Swipes = Models.Document & {
  swiper_id: string;
  swiped_user_id: string;
  is_like: boolean;
};

export type Matches = Models.Document & {
  user1_id: string;
  user2_id: string;
  matched_at: string;
  is_active: boolean;
};

export type UserPreferences = Models.Document & {
  user_id: string;
  max_distance_km: number | null;
  min_age: number | null;
  max_age: number | null;
  show_me: ShowMe | null;
};

export type Blocks = Models.Document & {
  blocker_id: string;
  blocked_user_id: string;
};

export type Reports = Models.Document & {
  reporter_id: string;
  reported_user_id: string;
  reason: string | null;
  evidence_photo_url: string | null;
  status: Status | null;
};

export type Notifications = Models.Document & {
  user_id: string;
  type: NotificationType;
  title: string;
  body: string;
  is_read: boolean;
  target_type: TargetType;
};

export type UserSettings = Models.Document & {
  user_id: string;
  push_notifications_enabled: boolean;
  email_notifications_enabled: boolean;
  discoverable: boolean;
};
